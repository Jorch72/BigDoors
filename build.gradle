/*buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.0-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'*/

plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}

version = "1.8-1.2.0"
group= "com.jaquadro.minecraft.bigdoors" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BigDoors"

minecraft {
    version = "1.8-11.14.4.1577"
    runDir = "runtime-1.8"

    replace '@VERSION@', project.version
    mappings = "snapshot_20150711"
}

sourceSets.main {
    java {
        srcDirs project.projectDir.getPath() + '/src'
    }
    resources {
        srcDirs project.projectDir.getPath() + '/resources'
    }
}

sourceSets.api {
    java {
        srcDirs project.projectDir.getPath() + '/api'
    }
}

repositories {
}

dependencies {
    compile 'net.malisis:malisiscore:1.8-1.2.0:dev'
    //compile 'net.malisis:malisisdoors:1.7.10-1.9.1:dev'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

artifacts {
    archives deobfJar
}
